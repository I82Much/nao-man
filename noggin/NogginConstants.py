
# Constants.py
# This file holds all Constants which span multiple files

##
##--------------------SWITCH BOARD ----------------#
##
PACKET_HEADER = "borat"
##### MODULE SWITCHES ####
USE_VISION = True # Disable if you want faster processing

#### DEBUG SWITCHES ####
USE_SNAPSHOT = True # Enable if you want to take pictures with spacebar


# Localization Related
ODOMETRY_DEBUG = False
DEBUG_LOC_INFO = False
DEBUG_LINES = False
DEBUG_CORNERS = False
DEBUG_FIELD_OBJECTS = False

##
##--------------------WALK TIME CONSTANTS -------------#
##
TIME_STEP = 40
TIME_PER_STEP = TIME_STEP/1000.

##
##--------------------TEAM STUFF-----------------------#
##
NUM_PLAYERS_PER_TEAM = 4

# Setup colors
NUM_GAME_TEAM_COLORS = 2
teamColorDict = dict(zip(range(NUM_GAME_TEAM_COLORS),\
		      ("TEAM_BLUE","TEAM_RED")))
(TEAM_BLUE,TEAM_RED) = range(NUM_GAME_TEAM_COLORS)

##
##--------------------VISION CONNECTION CONSTANTS------#
##
CAMERA_FPS = 10
# image constants, used for angle x,y setters
IMAGE_WIDTH = 640
IMAGE_HEIGHT = 480
IMAGE_CENTER_X = IMAGE_WIDTH / 2.0
FOV_X_DEG = 46.4
FOV_Y_DEG = 34.8
IMAGE_ANGLE_X = IMAGE_WIDTH / FOV_X_DEG
IMAGE_ANGLE_Y = IMAGE_HEIGHT / FOV_Y_DEG

NUM_TOTAL_BALL_VALUES = 40
NUM_VISION_BALL_VALUES = 9
NUM_VISION_FIELD_OBJECT_VALUES = 9

# confidence system for landmark values
NUM_FIELD_OBJECT_CERTAINTIES = 3
(NOTSURE,
 MILDLYSURE,
 SURE) = range(NUM_FIELD_OBJECT_CERTAINTIES)

# confidence system for distances to landmark values
NUM_FIELD_OBJECT_DIST_CERTAINTIES = 4
(BOTH_UNSURE,
 WIDTH_UNSURE,
 HEIGHT_UNSURE,
 BOTH_SURE) = range(NUM_FIELD_OBJECT_DIST_CERTAINTIES)

##
##--------------------LOCALIZATION CONSTANTS-----------#
##

# Set FIELD_SCALE to 1. for Official and 0.9 for Lab
# For more information on field values see Rules_2008 Section 1
OFFICIAL_SCALE = 1.
FIELD_SCALE = OFFICIAL_SCALE

#---Landmark Constants------#
# Notes:
# FIELD GREEN -- this relates to measurements along the outer edge of the field
# (ie , out of bounds, the very outside green part)
# FIELD WHITE -- this relates to the 'infield' or 'inbounds'

FIELD_WHITE_WIDTH = 400. * FIELD_SCALE
FIELD_WHITE_HEIGHT = 600. * FIELD_SCALE
FIELD_GREEN_WIDTH = 440. * FIELD_SCALE
FIELD_GREEN_HEIGHT = 680. * FIELD_SCALE
FIELD_WIDTH = FIELD_GREEN_WIDTH
FIELD_HEIGHT = FIELD_GREEN_HEIGHT

CENTER_FIELD_X = FIELD_GREEN_WIDTH / 2
CENTER_FIELD_Y = FIELD_GREEN_HEIGHT / 2

FIELD_GREEN_LEFT_SIDELINE_X = 0
FIELD_GREEN_RIGHT_SIDELINE_X = FIELD_GREEN_WIDTH
FIELD_GREEN_BOTTOM_SIDELINE_Y = 0
FIELD_GREEN_TOP_SIDELINE_Y = FIELD_GREEN_HEIGHT

GREEN_PAD_Y = 40. * FIELD_SCALE
GREEN_PAD_X = 20. * FIELD_SCALE

FIELD_WHITE_BOTTOM_SIDELINE_Y = GREEN_PAD_Y
FIELD_WHITE_TOP_SIDELINE_Y = FIELD_WHITE_HEIGHT + GREEN_PAD_Y
FIELD_WHITE_LEFT_SIDELINE_X = GREEN_PAD_X
FIELD_WHITE_RIGHT_SIDELINE_X = FIELD_WHITE_WIDTH + GREEN_PAD_X

OPP_GOAL_HEADING = 0.
MY_GOAL_HEADING = 180.

# BEACON CONSTANTS
LANDMARK_RIGHT_BEACON_X = FIELD_GREEN_WIDTH - 5.
LANDMARK_RIGHT_BEACON_Y = FIELD_GREEN_HEIGHT / 2.
LANDMARK_LEFT_BEACON_X = 5.
LANDMARK_LEFT_BEACON_Y = FIELD_GREEN_HEIGHT / 2.

# GOAL CONSTANTS
# my left post is left of goalie defending my goal facing the opponent
LANDMARK_MY_GOAL_LEFT_POST_X = CENTER_FIELD_X - 70
LANDMARK_MY_GOAL_RIGHT_POST_X = CENTER_FIELD_X + 70
LANDMARK_OPP_GOAL_LEFT_POST_X = CENTER_FIELD_X - 70
LANDMARK_OPP_GOAL_RIGHT_POST_X = CENTER_FIELD_X + 70

# measure to the center of the posts, 5 cm off the line
LANDMARK_MY_GOAL_LEFT_POST_Y = FIELD_WHITE_BOTTOM_SIDELINE_Y-5.0
LANDMARK_MY_GOAL_RIGHT_POST_Y = FIELD_WHITE_BOTTOM_SIDELINE_Y-5.0
LANDMARK_OPP_GOAL_LEFT_POST_Y = FIELD_WHITE_TOP_SIDELINE_Y+5.0
LANDMARK_OPP_GOAL_RIGHT_POST_Y = FIELD_WHITE_TOP_SIDELINE_Y+5.0

CENTER_CIRCLE_RADIUS = 65. # not scaled

GOALBOX_HEIGHT = 60. # not scaled
GOALBOX_WIDTH = 200. # not scaled

MIDFIELD_X = FIELD_GREEN_WIDTH / 2. 
MIDFIELD_Y = FIELD_GREEN_HEIGHT / 2.

GOALBOX_TOP_Y = GOALBOX_HEIGHT + GREEN_PAD_Y
GOALBOX_LEFT_X = MIDFIELD_X - GOALBOX_WIDTH / 2.
GOALBOX_RIGHT_X = MIDFIELD_X + GOALBOX_WIDTH / 2.

# my goal box constants relative to (0,0) on my team
MY_GOALBOX_LEFT_X = MIDFIELD_X - GOALBOX_WIDTH / 2.
MY_GOALBOX_RIGHT_X = MIDFIELD_X + GOALBOX_WIDTH / 2.
MY_GOALBOX_BOTTOM_Y = GREEN_PAD_Y # bottom as in closest to (0,0)
MY_GOALBOX_TOP_Y = GREEN_PAD_Y + GOALBOX_HEIGHT

# opp goal box constants relative to (0,0) on my team
OPP_GOALBOX_LEFT_X = MIDFIELD_X - GOALBOX_WIDTH / 2.
OPP_GOALBOX_RIGHT_X = MIDFIELD_X + GOALBOX_WIDTH / 2.
OPP_GOALBOX_BOTTOM_Y = FIELD_GREEN_HEIGHT-GREEN_PAD_Y-GOALBOX_HEIGHT
OPP_GOALBOX_TOP_Y = FIELD_GREEN_HEIGHT-GREEN_PAD_Y

#LANDMARK TUPLE
NUM_LANDMARKS = 21

(LANDMARK_MY_GOAL_LEFT_POST_ID,
 LANDMARK_MY_GOAL_RIGHT_POST_ID,
 LANDMARK_OPP_GOAL_LEFT_POST_ID,
 LANDMARK_OPP_GOAL_RIGHT_POST_ID,
 LANDMARK_LEFT_BEACON_ID,
 LANDMARK_RIGHT_BEACON_ID,
 LANDMARK_BALL_ID,
 LANDMARK_MY_CORNER_LEFT_L_ID,
 LANDMARK_MY_CORNER_RIGHT_L_ID,
 LANDMARK_MY_GOAL_LEFT_T_ID,
 LANDMARK_MY_GOAL_RIGHT_T_ID,
 LANDMARK_MY_GOAL_LEFT_L_ID,
 LANDMARK_MY_GOAL_RIGHT_L_ID,
 LANDMARK_CENTER_LEFT_T_ID,
 LANDMARK_CENTER_RIGHT_T_ID,
 LANDMARK_OPP_CORNER_LEFT_L_ID,
 LANDMARK_OPP_CORNER_RIGHT_L_ID,
 LANDMARK_OPP_GOAL_LEFT_T_ID,
 LANDMARK_OPP_GOAL_RIGHT_T_ID,
 LANDMARK_OPP_GOAL_LEFT_L_ID,
 LANDMARK_OPP_GOAL_RIGHT_L_ID) = range(NUM_LANDMARKS)

landmarkTuple = (
    "LANDMARK_MY_GOAL_LEFT_POST",
    "LANDMARK_MY_GOAL_RIGHT_POST",
    "LANDMARK_OPP_GOAL_LEFT_POST",
    "LANDMARK_OPP_GOAL_RIGHT_POST",
    "LANDMARK_LEFT_BEACON",
    "LANDMARK_RIGHT_BEACON",
    "LANDMARK_BALL",
    "LANDMARK_MY_CORNER_LEFT_L",
    "LANDMARK_MY_CORNER_RIGHT_L",
    "LANDMARK_MY_GOAL_LEFT_T",
    "LANDMARK_MY_GOAL_RIGHT_T",
    "LANDMARK_MY_GOAL_LEFT_L",
    "LANDMARK_MY_GOAL_RIGHT_L",
    "LANDMARK_CENTER_LEFT_T",
    "LANDMARK_CENTER_RIGHT_T",
    "LANDMARK_OPP_CORNER_LEFT_L",
    "LANDMARK_OPP_CORNER_RIGHT_L",
    "LANDMARK_OPP_GOAL_LEFT_T",
    "LANDMARK_OPP_GOAL_RIGHT_T",
    "LANDMARK_OPP_GOAL_LEFT_L",
    "LANDMARK_OPP_GOAL_RIGHT_L")

# Landmark Lists for localization
LANDMARK_MY_GOAL_LEFT_POST = [LANDMARK_MY_GOAL_LEFT_POST_X,
                              LANDMARK_MY_GOAL_LEFT_POST_Y,
                              LANDMARK_MY_GOAL_LEFT_POST_ID]
LANDMARK_MY_GOAL_RIGHT_POST = [LANDMARK_MY_GOAL_RIGHT_POST_X,
                               LANDMARK_MY_GOAL_RIGHT_POST_Y,
                               LANDMARK_MY_GOAL_RIGHT_POST_ID]
LANDMARK_OPP_GOAL_LEFT_POST = [LANDMARK_OPP_GOAL_LEFT_POST_X,
                               LANDMARK_OPP_GOAL_LEFT_POST_Y,
                               LANDMARK_OPP_GOAL_LEFT_POST_ID]
LANDMARK_OPP_GOAL_RIGHT_POST = [LANDMARK_OPP_GOAL_RIGHT_POST_X,
                                LANDMARK_OPP_GOAL_RIGHT_POST_Y,
                                LANDMARK_OPP_GOAL_RIGHT_POST_ID]
LANDMARK_LEFT_BEACON = [LANDMARK_LEFT_BEACON_X,
                        LANDMARK_LEFT_BEACON_Y,
                        LANDMARK_LEFT_BEACON_ID]
LANDMARK_RIGHT_BEACON = [LANDMARK_LEFT_BEACON_X,
                         LANDMARK_LEFT_BEACON_Y,
                         LANDMARK_LEFT_BEACON_ID]

# Vision IDs for landmarks
NUM_VIS_LANDMARKS = 8
(VISION_YGLP,
 VISION_YGRP,
 VISION_BGLP,
 VISION_BGRP,
 VISION_YB,
 VISION_BY,
 VISION_BG_CROSSBAR,
 VISION_YG_CROSSBAR,
 ) = range(NUM_VIS_LANDMARKS)

visionObjectTuple = ("YGLP",
                     "YGRP",
                     "BGLP",
                     "BGRP",
                     "YB",
                     "BY")


##
##-------------CORNER CONSTANTS-----------------##
##

#---Corner Information---#
NUM_CORNER_IDS = 28
NUM_CORNER_VALUES = 5
NUM_CORNER_VISION_VALUES = 3
NUM_LINE_VALUES = 6
COMPLETELY_ABSTRACT_CORNER = 0
NARROWLY_ABSTRACT_CORNER = 1
SPECIFIC_CORNER = 2
SPECIFIC_CORNER_INDEX = 14

# CORNER IDS AS THE VISION SYSTEM DEFINES THEM
(L_INNER_CORNER, # Completely Abstract Corner Types
 L_OUTER_CORNER,
 T_CORNER,
 CENTER_CIRCLE,
 BLUE_GOAL_T,  # Narrowly Abstract Corner Types
 YELLOW_GOAL_T,
 BLUE_GOAL_RIGHT_L_OR_YELLOW_GOAL_LEFT_L,
 BLUE_GOAL_LEFT_L_OR_YELLOW_GOAL_RIGHT_L,
 CORNER_INNER_L,
 GOAL_BOX_INNER_L,
 CORNER_OR_GOAL_INNER_L,
 BLUE_GOAL_OUTER_L,
 YELLOW_GOAL_OUTER_L,
 CENTER_T,
 BLUE_CORNER_LEFT_L,  # Specific Corners
 BLUE_CORNER_RIGHT_L,
 BLUE_GOAL_LEFT_T,
 BLUE_GOAL_RIGHT_T,
 BLUE_GOAL_LEFT_L,
 BLUE_GOAL_RIGHT_L,
 CENTER_BY_T,
 CENTER_YB_T,
 YELLOW_CORNER_LEFT_L,
 YELLOW_CORNER_RIGHT_L,
 YELLOW_GOAL_LEFT_T,
 YELLOW_GOAL_RIGHT_T,
 YELLOW_GOAL_LEFT_L,
 YELLOW_GOAL_RIGHT_L) = range(NUM_CORNER_IDS)

# Narrowly Abstract Corner Types but the way python likes them
#Commented out corners are identical in c and python,
#They are included for easy reference only
#L_INNER_CORNER = 0
#L_OUTER_CORNER = 1
#T_CORNER = 2
#CENTER_CIRCLE = 3
MY_GOAL_T = 4
OPP_GOAL_T = 5
MY_GOAL_RIGHT_L_OR_OPP_GOAL_LEFT_L = 6
MY_GOAL_LEFT_L_OR_OPP_GOAL_RIGHT_L = 7
#CORNER_INNER_L = 8
#GOAL_BOX_INNER_L = 9
#CORNER_OR_GOAL_INNER_L = 10
MY_GOAL_OUTER_L = 11
OPP_GOAL_OUTER_L = 12

# Specific corner types the way python likes them
#CENTER_T = 13
MY_CORNER_LEFT_L = 14
MY_CORNER_RIGHT_L = 15
MY_GOAL_LEFT_T = 16
MY_GOAL_RIGHT_T = 17
MY_GOAL_LEFT_L = 18
MY_GOAL_RIGHT_L = 19
CENTER_LEFT_T = 20
CENTER_RIGHT_T = 21
OPP_CORNER_LEFT_L = 22
OPP_CORNER_RIGHT_L = 23
OPP_GOAL_LEFT_T = 24
OPP_GOAL_RIGHT_T = 25
OPP_GOAL_LEFT_L = 26
OPP_GOAL_RIGHT_L = 27

visionCornerTuple = ("L_INNER_CORNER","L_OUTER_CORNER","T_CORNER","CENTER_CIRCLE","BLUE_GOAL_T","YELLOW_GOAL_T","BLUE_GOAL_RIGHT_L_OR_YELLOW_GOAL_LEFT_L","BLUE_GOAL_LEFT_L_OR_YELLOW_GOAL_RIGHT_L","CORNER_INNER_L","GOAL_BOX_INNER_L","CORNER_OR_GOAL_INNER_L","BLUE_GOAL_OUTER_L","YELLOW_GOAL_OUTER_L","CENTER_T","BLUE_CORNER_LEFT_L","BLUE_CORNER_RIGHT_L","BLUE_GOAL_LEFT_T","BLUE_GOAL_RIGHT_T","BLUE_GOAL_LEFT_L","BLUE_GOAL_RIGHT_L","CENTER_BY_T","CENTER_YB_T","YELLOW_CORNER_LEFT_L","YELLOW_CORNER_RIGHT_L","YELLOW_GOAL_LEFT_T","YELLOW_GOAL_RIGHT_T","YELLOW_GOAL_LEFT_L","YELLOW_GOAL_RIGHT_L")

cornerTuple = ("L_INNER_CORNER","L_OUTER_CORNER","T_CORNER","CENTER_CIRCLE","MY_GOAL_T","OPP_GOAL_T","MY_GOAL_RIGHT_L_OR_OPP_GOAL_LEFT_L","MY_GOAL_LEFT_L_OR_OPP_GOAL_RIGHT_L","CORNER_INNER_L","GOAL_BOX_INNER_L","CORNER_OR_GOAL_INNER_L","MY_GOAL_OUTER_L","OPP_GOAL_OUTER_L","CENTER_T","MY_CORNER_LEFT_L","MY_CORNER_RIGHT_L","MY_GOAL_LEFT_T","MY_GOAL_RIGHT_T","MY_GOAL_LEFT_L","MY_GOAL_RIGHT_L","CENTER_LEFT_T","CENTER_RIGHT_T","OPP_CORNER_LEFT_L","OPP_CORNER_RIGHT_L","OPP_GOAL_LEFT_T","OPP_GOAL_RIGHT_T","OPP_GOAL_LEFT_L","OPP_GOAL_RIGHT_L")

# Corner Info Tuple Dict
# Indexed by corner constants, valued by tuples of info about that corner
# The tuples for non-specifc corners don't include x and y coordinates
CORNER_DESCRIPTION_STRING, CORNER_ABSTRACTION_LEVEL_INFO, CORNER_X_CORD, CORNER_Y_CORD = range(4)
CORNER_TYPE_INDEX_DICT = { L_INNER_CORNER : 0, L_OUTER_CORNER:1, T_CORNER:2,
                           CENTER_CIRCLE:3, MY_GOAL_T:4, OPP_GOAL_T:5,
                           MY_GOAL_RIGHT_L_OR_OPP_GOAL_LEFT_L:6,
                           MY_GOAL_LEFT_L_OR_OPP_GOAL_RIGHT_L:7,
                           CORNER_INNER_L:8,
                           GOAL_BOX_INNER_L:9,
                           CORNER_OR_GOAL_INNER_L:10,
                           MY_GOAL_OUTER_L:11,
                           OPP_GOAL_OUTER_L:12,
                           CENTER_T:13 }

CORNER_INFO_DICT = {

# completely abstract corners
L_INNER_CORNER: ('L Inner Corner', COMPLETELY_ABSTRACT_CORNER),\
L_OUTER_CORNER: ('L Outer Corner', COMPLETELY_ABSTRACT_CORNER),\
T_CORNER: ('T Corner', COMPLETELY_ABSTRACT_CORNER),\
CENTER_CIRCLE: ('Center Circle', COMPLETELY_ABSTRACT_CORNER),\

# narrowly abstract corners
MY_GOAL_T: ('My Goal T', NARROWLY_ABSTRACT_CORNER),\
OPP_GOAL_T: ('Opp Goal T', NARROWLY_ABSTRACT_CORNER),\
MY_GOAL_RIGHT_L_OR_OPP_GOAL_LEFT_L: ('My Goal Right L or Opp Goal Left L', NARROWLY_ABSTRACT_CORNER),\
MY_GOAL_LEFT_L_OR_OPP_GOAL_RIGHT_L: ('My Goal Left L or Opp Goal Right L', NARROWLY_ABSTRACT_CORNER),\
CORNER_INNER_L: ('Corner Inner L', NARROWLY_ABSTRACT_CORNER),\
GOAL_BOX_INNER_L: ('Goal Box Inner L', NARROWLY_ABSTRACT_CORNER),\
CORNER_OR_GOAL_INNER_L: ('Corner or Goal Inner L', NARROWLY_ABSTRACT_CORNER),\
MY_GOAL_OUTER_L: ('My Goal Outer L', NARROWLY_ABSTRACT_CORNER),\
OPP_GOAL_OUTER_L: ('Opp Goal Outer L', NARROWLY_ABSTRACT_CORNER),\
CENTER_T: ('Center T', NARROWLY_ABSTRACT_CORNER),\

# specific corners
MY_CORNER_LEFT_L: ('My Corner Left L', SPECIFIC_CORNER,FIELD_WHITE_LEFT_SIDELINE_X, FIELD_WHITE_BOTTOM_SIDELINE_Y),\
MY_CORNER_RIGHT_L: ('My Corner Right L', SPECIFIC_CORNER,FIELD_WHITE_RIGHT_SIDELINE_X, FIELD_WHITE_BOTTOM_SIDELINE_Y),\

MY_GOAL_LEFT_T: ('My Goal Left T', SPECIFIC_CORNER, GOALBOX_LEFT_X, FIELD_WHITE_BOTTOM_SIDELINE_Y),
MY_GOAL_RIGHT_T: ('My Goal Right T', SPECIFIC_CORNER, GOALBOX_RIGHT_X, FIELD_WHITE_BOTTOM_SIDELINE_Y),\

MY_GOAL_LEFT_L: ('My Goal Left L', SPECIFIC_CORNER, GOALBOX_LEFT_X, GOALBOX_HEIGHT+FIELD_WHITE_BOTTOM_SIDELINE_Y),\
MY_GOAL_RIGHT_L: ('My Goal Right L', SPECIFIC_CORNER, GOALBOX_RIGHT_X, GOALBOX_HEIGHT+FIELD_WHITE_BOTTOM_SIDELINE_Y),\

CENTER_LEFT_T: ('Center Left T', SPECIFIC_CORNER, FIELD_WHITE_LEFT_SIDELINE_X, MIDFIELD_Y),\
CENTER_RIGHT_T: ('Center Right T', SPECIFIC_CORNER, FIELD_WHITE_RIGHT_SIDELINE_X, MIDFIELD_Y),\

OPP_CORNER_LEFT_L: ('Opp Corner Left L', SPECIFIC_CORNER, FIELD_WHITE_LEFT_SIDELINE_X, FIELD_WHITE_TOP_SIDELINE_Y),\
OPP_CORNER_RIGHT_L: ('Opp Corner Right L', SPECIFIC_CORNER, FIELD_WHITE_RIGHT_SIDELINE_X, FIELD_WHITE_TOP_SIDELINE_Y),\

OPP_GOAL_LEFT_T: ('Opp Goal Left T', SPECIFIC_CORNER, GOALBOX_LEFT_X, FIELD_WHITE_TOP_SIDELINE_Y),\
OPP_GOAL_RIGHT_T: ('Opp Goal Right T', SPECIFIC_CORNER, GOALBOX_RIGHT_X, FIELD_WHITE_TOP_SIDELINE_Y),\

OPP_GOAL_LEFT_L: ('Opp Goal Left L', SPECIFIC_CORNER, GOALBOX_LEFT_X, FIELD_WHITE_TOP_SIDELINE_Y - GOALBOX_HEIGHT),\
OPP_GOAL_RIGHT_L: ('Opp Goal Right L', SPECIFIC_CORNER, GOALBOX_RIGHT_X, FIELD_WHITE_TOP_SIDELINE_Y - GOALBOX_HEIGHT)

} #fin

# Specific Corners for Type Dict
# Indexed by abstract corner constans, valued by lists of specific corners that fall under that type
# DOH - whether some corners are inner or outer depends on if dog is in the goal box 
# FOR NOW - return all possible corners for a given type.  It will be the responsibility of the localization engine to filter this list of possible corners based on its current location
SPECIFIC_CORNERS_FOR_TYPE_DICT = {\
L_INNER_CORNER : [MY_CORNER_LEFT_L, MY_CORNER_RIGHT_L, MY_GOAL_LEFT_L, MY_GOAL_RIGHT_L, OPP_CORNER_LEFT_L, OPP_CORNER_RIGHT_L, OPP_GOAL_LEFT_L, OPP_GOAL_RIGHT_L,],\
L_OUTER_CORNER : [MY_GOAL_LEFT_L, MY_GOAL_RIGHT_L, OPP_GOAL_LEFT_L, OPP_GOAL_RIGHT_L],\
T_CORNER : [MY_GOAL_LEFT_T, MY_GOAL_RIGHT_T, CENTER_BY_T, CENTER_YB_T, OPP_GOAL_RIGHT_T, OPP_GOAL_LEFT_T],\
CENTER_CIRCLE : [CENTER_BY_T, CENTER_YB_T],\
MY_GOAL_T: [MY_GOAL_LEFT_T, MY_GOAL_RIGHT_T],\
OPP_GOAL_T: [OPP_GOAL_LEFT_T, OPP_GOAL_RIGHT_T,],\
MY_GOAL_RIGHT_L_OR_OPP_GOAL_LEFT_L: [MY_GOAL_RIGHT_L, OPP_GOAL_LEFT_L],\
MY_GOAL_LEFT_L_OR_OPP_GOAL_RIGHT_L: [MY_GOAL_LEFT_L, OPP_GOAL_RIGHT_L],\
CORNER_INNER_L: [MY_CORNER_LEFT_L, MY_CORNER_RIGHT_L, OPP_CORNER_LEFT_L, OPP_CORNER_RIGHT_L], \
GOAL_BOX_INNER_L: [MY_GOAL_LEFT_L, MY_GOAL_RIGHT_L, OPP_GOAL_LEFT_L, OPP_GOAL_RIGHT_L], \
CORNER_OR_GOAL_INNER_L: [MY_CORNER_LEFT_L, MY_CORNER_RIGHT_L, MY_GOAL_LEFT_L, MY_GOAL_RIGHT_L, OPP_CORNER_LEFT_L, OPP_CORNER_RIGHT_L, OPP_GOAL_LEFT_L, OPP_GOAL_RIGHT_L],\
MY_GOAL_OUTER_L: [MY_GOAL_LEFT_L, MY_GOAL_RIGHT_L],\
OPP_GOAL_OUTER_L: [OPP_GOAL_LEFT_L, OPP_GOAL_RIGHT_L],\
CENTER_T: [CENTER_BY_T, CENTER_YB_T]}

################################################################################
##### END LOCALIZATION DATA
################################################################################

